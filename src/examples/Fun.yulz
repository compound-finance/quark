/// @use-src 0:"src/examples/Fun.sol"
    object "Fun_14_deployed" {
        code {
            verbatim_0i_0o(hex"303030505050")
            fun_hello_13()

            function shift_right_224_unsigned(value) -> newValue {
                newValue :=

                shr(224, value)

            }

            function allocate_unbounded() -> memPtr {
                memPtr := mload(64)
            }

            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb() {
                revert(0, 0)
            }

            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {
                revert(0, 0)
            }

            function abi_decode_tuple_(headStart, dataEnd)   {
                if slt(sub(dataEnd, headStart), 0) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }

            }

            function abi_encode_tuple__to__fromStack(headStart ) -> tail {
                tail := add(headStart, 0)

            }

            function external_fun_hello_13() {

                if callvalue() { revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb() }
                abi_decode_tuple_(4, calldatasize())
                fun_hello_13()
                let memPos := allocate_unbounded()
                let memEnd := abi_encode_tuple__to__fromStack(memPos  )
                return(memPos, sub(memEnd, memPos))

            }

            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74() {
                revert(0, 0)
            }

            function cleanup_t_rational_55_by_1(value) -> cleaned {
                cleaned := value
            }

            function cleanup_t_uint256(value) -> cleaned {
                cleaned := value
            }

            function identity(value) -> ret {
                ret := value
            }

            function convert_t_rational_55_by_1_to_t_uint256(value) -> converted {
                converted := cleanup_t_uint256(identity(cleanup_t_rational_55_by_1(value)))
            }

            function abi_encode_t_rational_55_by_1_to_t_uint256_fromStack(value, pos) {
                mstore(pos, convert_t_rational_55_by_1_to_t_uint256(value))
            }

            function abi_encode_tuple_t_rational_55_by_1__to_t_uint256__fromStack(headStart , value0) -> tail {
                tail := add(headStart, 32)

                abi_encode_t_rational_55_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))

            }

            /// @ast-id 13
            /// @src 0:110:164  "function hello() external {..."
            function fun_hello_13() {

                /// @src 0:156:158  "55"
                let expr_9 := 0x37
                /// @src 0:147:159  "FunTimes(55)"
                let _1 := 0xa1591fde914eeec9b1f4af5ae4aa02e5df4a18be175afa9203f1307f5053151a
                {
                    let _2 := allocate_unbounded()
                    let _3 := abi_encode_tuple_t_rational_55_by_1__to_t_uint256__fromStack(_2 , expr_9)
                    log1(_2, sub(_3, _2) , _1)
                }
            }
            /// @src 0:65:166  "contract Fun {..."

        }

        data ".metadata" hex"a2646970667358221220bea2bb189177ec101d8cb7c49fe90b5ed64da05a05eff4ea313d4fd3d17d45c964736f6c63430008100033"
    }
